[{"/Users/Marcus/Projects/Audex/Audex.Desktop/src/App.tsx":"1","/Users/Marcus/Projects/Audex/Audex.Desktop/src/index.js":"2","/Users/Marcus/Projects/Audex/Audex.Desktop/src/Components/MenuBar.tsx":"3","/Users/Marcus/Projects/Audex/Audex.Desktop/src/Components/RecentFiles.tsx":"4","/Users/Marcus/Projects/Audex/Audex.Desktop/src/Pages/HomePage.tsx":"5","/Users/Marcus/Projects/Audex/Audex.Desktop/src/Components/Header/LoggedInUser.tsx":"6","/Users/Marcus/Projects/Audex/Audex.Desktop/src/Components/Header/HeaderBar.tsx":"7","/Users/Marcus/Projects/Audex/Audex.Desktop/src/Components/Header/MenuItems.ts":"8","/Users/Marcus/Projects/Audex/Audex.Desktop/src/Components/FilesList.tsx":"9","/Users/Marcus/Projects/Audex/Audex.Desktop/src/Components/Modals/FilePanel.tsx":"10","/Users/Marcus/Projects/Audex/Audex.Desktop/src/Components/Modals/Modals.tsx":"11","/Users/Marcus/Projects/Audex/Audex.Desktop/src/Components/Modals/FileTransferPanel.tsx":"12","/Users/Marcus/Projects/Audex/Audex.Desktop/src/Components/BackToTop.tsx":"13","/Users/Marcus/Projects/Audex/Audex.Desktop/src/Data/DataStore.ts":"14","/Users/Marcus/Projects/Audex/Audex.Desktop/src/Components/Uploading/FileUnit.tsx":"15","/Users/Marcus/Projects/Audex/Audex.Desktop/src/Components/Uploading/FileUpload.tsx":"16","/Users/Marcus/Projects/Audex/Audex.Desktop/src/Components/Uploading/FileDrop.tsx":"17","/Users/Marcus/Projects/Audex/Audex.Desktop/src/Hooks/useResponsive.ts":"18"},{"size":887,"mtime":1609556029123,"results":"19","hashOfConfig":"20"},{"size":155,"mtime":1608276057398,"results":"21","hashOfConfig":"20"},{"size":3061,"mtime":1609650555752,"results":"22","hashOfConfig":"20"},{"size":2481,"mtime":1609650552250,"results":"23","hashOfConfig":"20"},{"size":1160,"mtime":1609650531191,"results":"24","hashOfConfig":"20"},{"size":1940,"mtime":1609384593932,"results":"25","hashOfConfig":"20"},{"size":1916,"mtime":1609787514676,"results":"26","hashOfConfig":"20"},{"size":581,"mtime":1609466762509,"results":"27","hashOfConfig":"20"},{"size":11222,"mtime":1609787200739,"results":"28","hashOfConfig":"20"},{"size":670,"mtime":1609650091699,"results":"29","hashOfConfig":"20"},{"size":287,"mtime":1609532149664,"results":"30","hashOfConfig":"20"},{"size":5811,"mtime":1609738353143,"results":"31","hashOfConfig":"20"},{"size":767,"mtime":1609555172471,"results":"32","hashOfConfig":"20"},{"size":1350,"mtime":1609650295426,"results":"33","hashOfConfig":"20"},{"size":3018,"mtime":1609743943819,"results":"34","hashOfConfig":"20"},{"size":1241,"mtime":1609743983539,"results":"35","hashOfConfig":"20"},{"size":1510,"mtime":1609737558818,"results":"36","hashOfConfig":"20"},{"size":1995,"mtime":1609727219866,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},"qk0n9f",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/Marcus/Projects/Audex/Audex.Desktop/src/App.tsx",["85"],"import * as React from 'react';\nimport { initializeIcons, ThemeProvider } from '@fluentui/react';\nimport { initializeFileTypeIcons } from '@uifabric/file-type-icons';\nimport {\n\tBrowserRouter as Router,\n\tSwitch,\n\tRoute,\n\tRedirect,\n} from 'react-router-dom';\nimport HeaderBar from './Components/Header/HeaderBar';\nimport HomePage from './Pages/HomePage';\nimport Modals from './Components/Modals/Modals';\n\nconst App = () => {\n\tinitializeIcons();\n\tinitializeFileTypeIcons();\n\n\treturn (\n\t\t// <ThemeProvider theme={appTheme}>\n\t\t<ThemeProvider>\n\t\t\t<Router>\n\t\t\t\t<HeaderBar />\n\t\t\t\t<Modals />\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path='/' exact>\n\t\t\t\t\t\t<Redirect to='/Home/Recent' />\n\t\t\t\t\t</Route>\n\n\t\t\t\t\t<Route path='/Home/:tab'>\n\t\t\t\t\t\t<HomePage />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path='/Users'></Route>\n\t\t\t\t\t<Route path='/Settings'></Route>\n\t\t\t\t</Switch>\n\t\t\t</Router>\n\t\t</ThemeProvider>\n\t);\n};\n\nexport default App;\n",[],"/Users/Marcus/Projects/Audex/Audex.Desktop/src/index.js",[],[],"/Users/Marcus/Projects/Audex/Audex.Desktop/src/Components/MenuBar.tsx",["86"],"import { CommandBar, ICommandBarItemProps } from '@fluentui/react';\nimport React, { useEffect, useState } from 'react';\nimport { DataStore } from '../Data/DataStore';\n\nconst _baseItems: ICommandBarItemProps[] = [\n\t{\n\t\tkey: 'newItem',\n\t\ttext: 'New',\n\t\ticonProps: { iconName: 'Add' },\n\t\tsubMenuProps: {\n\t\t\titems: [\n\t\t\t\t{\n\t\t\t\t\tkey: 'upload',\n\t\t\t\t\ttext: 'File Upload',\n\t\t\t\t\ticonProps: { iconName: 'OpenFile' },\n\t\t\t\t\tonClick: () =>\n\t\t\t\t\t\tDataStore.update((s) => {\n\t\t\t\t\t\t\ts.Modals.FileTransfer.isOpen = true;\n\t\t\t\t\t\t\ts.Modals.FileTransfer.mode = 'upload';\n\t\t\t\t\t\t}),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'transfer',\n\t\t\t\t\ttext: 'File Transfer',\n\t\t\t\t\ticonProps: { iconName: 'ChangeEntitlements' },\n\t\t\t\t\tonClick: () =>\n\t\t\t\t\t\tDataStore.update((s) => {\n\t\t\t\t\t\t\ts.Modals.FileTransfer.isOpen = true;\n\t\t\t\t\t\t\ts.Modals.FileTransfer.mode = 'transfer';\n\t\t\t\t\t\t}),\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t},\n];\n\nconst _recentItems: ICommandBarItemProps[] = [\n\t{\n\t\tkey: 'upload',\n\t\ttext: 'Upload',\n\t\ticonProps: { iconName: 'Upload' },\n\t},\n];\n\nconst _filesItems: ICommandBarItemProps[] = [\n\t{\n\t\tkey: 'download',\n\t\ttext: 'Download',\n\t\ticonProps: { iconName: 'Download' },\n\t\tonClick: () => console.log('Download'),\n\t},\n\t{\n\t\tkey: 'share',\n\t\ttext: 'Share',\n\t\ticonProps: { iconName: 'Share' },\n\t\tonClick: () => console.log('Share'),\n\t},\n\t{\n\t\tkey: 'move',\n\t\ttext: 'Move to...',\n\t\tonClick: () => console.log('Move to'),\n\t\ticonProps: { iconName: 'MoveToFolder' },\n\t},\n\t{\n\t\tkey: 'copy',\n\t\ttext: 'Copy to...',\n\t\tonClick: () => console.log('Copy to'),\n\t\ticonProps: { iconName: 'Copy' },\n\t},\n\t{\n\t\tkey: 'rename',\n\t\ttext: 'Rename...',\n\t\tonClick: () => console.log('Rename'),\n\t\ticonProps: { iconName: 'Edit' },\n\t},\n];\n\nconst _devicesItems: ICommandBarItemProps[] = [\n\t{\n\t\tkey: 'upload',\n\t\ttext: 'Upload',\n\t\ticonProps: { iconName: 'Upload' },\n\t},\n];\n\n// const _overflowItems: ICommandBarItemProps[] = [\n\n// ];\n\nconst _farItems: ICommandBarItemProps[] = [\n\t{\n\t\tkey: 'tile',\n\t\ttext: 'Grid view',\n\t\t// This needs an ariaLabel since it's icon-only\n\t\tariaLabel: 'Grid view',\n\t\ticonOnly: true,\n\t\ticonProps: { iconName: 'Tiles' },\n\t\tonClick: () => console.log('Tiles'),\n\t},\n\t{\n\t\tkey: 'info',\n\t\ttext: 'Info',\n\t\t// This needs an ariaLabel since it's icon-only\n\t\tariaLabel: 'Info',\n\t\ticonOnly: true,\n\t\ticonProps: { iconName: 'Info' },\n\t\tonClick: () => console.log('Info'),\n\t},\n];\n\ninterface Props {\n\ttype: 'Recent' | 'Files' | 'Devices';\n\titemsSelected?: boolean;\n}\n\nconst MenuBar = (props: Props) => {\n\tconst [items, setItems] = useState<ICommandBarItemProps[]>();\n\n\tuseEffect(() => {\n\t\tlet i = [];\n\t\ti = i.concat(_baseItems);\n\t\tswitch (props.type) {\n\t\t\tcase 'Recent':\n\t\t\t\ti = i.concat(_recentItems);\n\t\t\t\tbreak;\n\t\t\tcase 'Files':\n\t\t\t\ti = i.concat(_filesItems);\n\t\t\t\tbreak;\n\t\t\tcase 'Devices':\n\t\t\t\ti = i.concat(_devicesItems);\n\t\t\t\tbreak;\n\t\t}\n\t\tsetItems(i);\n\t}, []);\n\n\treturn (\n\t\t<CommandBar\n\t\t\tstyle={{ marginTop: 10, position: 'sticky', top: 0, zIndex: 100 }}\n\t\t\titems={items}\n\t\t\t// overflowItems={_overflowItems}\n\t\t\tfarItems={_farItems}\n\t\t\tariaLabel='Use left and right arrow keys to navigate between commands'\n\t\t/>\n\t);\n};\n\nexport default MenuBar;\n",[],"/Users/Marcus/Projects/Audex/Audex.Desktop/src/Components/RecentFiles.tsx",["87","88","89","90","91"],"import {\n\tActivityItem,\n\tFontIcon,\n\tIcon,\n\tIconButton,\n\tLink,\n\tSeparator,\n\tSpinner,\n\tSpinnerSize,\n\tText,\n} from '@fluentui/react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { getFileTypeIconProps } from '@uifabric/file-type-icons';\nimport React, { useState } from 'react';\nimport faker from 'faker';\nimport MenuBar from './MenuBar';\nimport { DataStore } from '../Data/DataStore';\nimport BackToTop from './BackToTop';\n\nconst RecentFiles = () => {\n\tconst moreFakeRecent = () => {\n\t\treturn new Array(50).fill(null).map(\n\t\t\t(e) =>\n\t\t\t\t(e = {\n\t\t\t\t\tkey: faker.random.number(),\n\t\t\t\t\tactivityDescription: [\n\t\t\t\t\t\t<Link style={{ fontWeight: 'bold' }} key={1}>\n\t\t\t\t\t\t\t{faker.name.firstName()}\n\t\t\t\t\t\t</Link>,\n\t\t\t\t\t\t<Text key={2}> uploaded </Text>,\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\tonClick={() => inspectFile(faker.random.uuid())}\n\t\t\t\t\t\t\tstyle={{ fontWeight: 'bold' }}\n\t\t\t\t\t\t\tkey={3}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{faker.system.fileName()}\n\t\t\t\t\t\t</Link>,\n\t\t\t\t\t],\n\t\t\t\t\tactivityIcon: (\n\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\t{...getFileTypeIconProps({\n\t\t\t\t\t\t\t\textension: 'docx',\n\t\t\t\t\t\t\t\tsize: 32,\n\t\t\t\t\t\t\t\timageFileType: 'png',\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t/>\n\t\t\t\t\t),\n\t\t\t\t\ttimeStamp: 'yesterday',\n\t\t\t\t})\n\t\t);\n\t};\n\tconst [activity, setActivity] = useState(moreFakeRecent());\n\n\tconst fetchData = () => {\n\t\tsetTimeout(() => setActivity(activity.concat(moreFakeRecent())), 2000);\n\t};\n\n\t// // File Panel\n\t// const [isOpen, { setTrue: openPanel, setFalse: dismissPanel }] = useBoolean(\n\t// \tfalse\n\t// );\n\t// const [file]\n\tconst inspectFile = (id: string) => {\n\t\t// DataStore.update((s) => {\n\t\t// \t(s.Modals.FilePanel.isOpen = true),\n\t\t// \t\t(s.Modals.FilePanel.fileId = id);\n\t\t// });\n\t\tDataStore.update((s) => {\n\t\t\t(s.Modals.FilePanel.fileId = id),\n\t\t\t\t(s.Modals.FilePanel.isOpen = true);\n\t\t});\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<MenuBar type='Recent' />\n\n\t\t\t<InfiniteScroll\n\t\t\t\tdataLength={activity.length} //This is important field to render the next data\n\t\t\t\tnext={fetchData}\n\t\t\t\thasMore={true}\n\t\t\t\tloader={<Spinner size={SpinnerSize.large} />}\n\t\t\t\tendMessage={\n\t\t\t\t\t<p style={{ textAlign: 'center' }}>\n\t\t\t\t\t\t<b>Yay! You have seen it all</b>\n\t\t\t\t\t</p>\n\t\t\t\t}\n\t\t\t\tstyle={{\n\t\t\t\t\toverflow: 'visible',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{activity.map((i) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div key={i.key}>\n\t\t\t\t\t\t\t<Separator />\n\t\t\t\t\t\t\t<ActivityItem\n\t\t\t\t\t\t\t\t{...i}\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t// marginTop: 20,\n\t\t\t\t\t\t\t\t\tmarginLeft: 40,\n\t\t\t\t\t\t\t\t\tmarginRight: 40,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</InfiniteScroll>\n\t\t</div>\n\t);\n};\n\nexport default RecentFiles;\n","/Users/Marcus/Projects/Audex/Audex.Desktop/src/Pages/HomePage.tsx",["92"],"/Users/Marcus/Projects/Audex/Audex.Desktop/src/Components/Header/LoggedInUser.tsx",["93"],"import {\n\tmergeStyleSets,\n\tPersona,\n\tPersonaSize,\n\tPersonaPresence,\n\tContextualMenu,\n\tgetTheme,\n\tIPersonaSharedProps,\n\tIContextualMenuItem,\n} from '@fluentui/react';\nimport React from 'react';\n\nconst accountMenuItems: IContextualMenuItem[] = [\n\t{\n\t\tkey: 'account',\n\t\ttext: 'Account',\n\t\tonClick: () => console.log('Account'),\n\t},\n\t// {\n\t// \tkey: 'divider_1',\n\t// \titemType: ContextualMenuItemType.Divider,\n\t// },\n\t{\n\t\tkey: 'logout',\n\t\ttext: 'Log Out',\n\t\tonClick: () => console.log('Log Out'),\n\t},\n];\n\nconst LoggedInUser = () => {\n\tconst { palette } = getTheme();\n\n\t// Persona Settings\n\tconst examplePersona: IPersonaSharedProps = {\n\t\t// imageUrl: TestImages.personaFemale,\n\t\timageInitials: 'MO',\n\t\ttext: 'Marcus Orciuch',\n\t\tsecondaryText: 'Administrator',\n\t\ttertiaryText: 'On Audex desktop client (MacOS)',\n\t\tshowSecondaryText: true,\n\t};\n\n\t// Account Context Menu\n\tconst linkRef = React.useRef(null);\n\tconst [showContextualMenu, setShowContextualMenu] = React.useState(false);\n\tconst onShowContextualMenu = React.useCallback(\n\t\t(ev: React.MouseEvent<HTMLElement>) => {\n\t\t\tev.preventDefault(); // don't navigate\n\t\t\tsetShowContextualMenu(true);\n\t\t},\n\t\t[]\n\t);\n\tconst onHideContextualMenu = React.useCallback(\n\t\t() => setShowContextualMenu(false),\n\t\t[]\n\t);\n\n\treturn (\n\t\t<div\n\t\t\tclassName={\n\t\t\t\tmergeStyleSets({\n\t\t\t\t\tpersona: {\n\t\t\t\t\t\tselectors: {\n\t\t\t\t\t\t\t'&:hover': {\n\t\t\t\t\t\t\t\tbackground: palette.neutralLight,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcursor: 'pointer',\n\t\t\t\t\t\tpadding: 5,\n\t\t\t\t\t},\n\t\t\t\t}).persona\n\t\t\t}\n\t\t\t// style={{\n\t\t\t// \tcursor: 'pointer',\n\t\t\t// }}\n\t\t>\n\t\t\t<Persona\n\t\t\t\t{...examplePersona}\n\t\t\t\tsize={PersonaSize.size32}\n\t\t\t\tpresence={PersonaPresence.online}\n\t\t\t\tref={linkRef}\n\t\t\t\tonClick={onShowContextualMenu}\n\t\t\t/>\n\t\t\t<ContextualMenu\n\t\t\t\titems={accountMenuItems}\n\t\t\t\thidden={!showContextualMenu}\n\t\t\t\ttarget={linkRef}\n\t\t\t\tonItemClick={onHideContextualMenu}\n\t\t\t\tonDismiss={onHideContextualMenu}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default LoggedInUser;\n",[],"/Users/Marcus/Projects/Audex/Audex.Desktop/src/Components/Header/HeaderBar.tsx",["94","95","96","97","98","99"],"/Users/Marcus/Projects/Audex/Audex.Desktop/src/Components/Header/MenuItems.ts",[],"/Users/Marcus/Projects/Audex/Audex.Desktop/src/Components/FilesList.tsx",["100","101","102","103","104","105","106","107","108","109","110","111","112","113"],"import * as React from 'react';\nimport {\n\tAnnounced,\n\tDetailsList,\n\tDetailsListLayoutMode,\n\tSelection,\n\tSelectionMode,\n\tIColumn,\n\tMarqueeSelection,\n\tmergeStyleSets,\n\tToggle,\n\tTextField,\n} from '@fluentui/react';\nimport MenuBar from './MenuBar';\nimport { DataStore } from '../Data/DataStore';\n\nconst classNames = mergeStyleSets({\n\tfileIconHeaderIcon: {\n\t\tpadding: 0,\n\t\tfontSize: '16px',\n\t},\n\tfileIconCell: {\n\t\ttextAlign: 'center',\n\t\tselectors: {\n\t\t\t'&:before': {\n\t\t\t\tcontent: '.',\n\t\t\t\tdisplay: 'inline-block',\n\t\t\t\tverticalAlign: 'middle',\n\t\t\t\theight: '100%',\n\t\t\t\twidth: '0px',\n\t\t\t\tvisibility: 'hidden',\n\t\t\t},\n\t\t},\n\t},\n\tfileIconImg: {\n\t\tverticalAlign: 'middle',\n\t\tmaxHeight: '16px',\n\t\tmaxWidth: '16px',\n\t},\n\tcontrolWrapper: {\n\t\tdisplay: 'flex',\n\t\tflexWrap: 'wrap',\n\t},\n\texampleToggle: {\n\t\tdisplay: 'inline-block',\n\t\tmarginBottom: '10px',\n\t\tmarginRight: '30px',\n\t},\n\tselectionDetails: {\n\t\tmarginBottom: '20px',\n\t},\n});\nconst controlStyles = {\n\troot: {\n\t\tmargin: '0 30px 20px 0',\n\t\tmaxWidth: '300px',\n\t},\n};\n\nexport interface IDetailsListDocumentsExampleState {\n\tcolumns: IColumn[];\n\titems: IDocument[];\n\tselectionDetails: string;\n\tisModalSelection: boolean;\n\tisCompactMode: boolean;\n\tannouncedMessage?: string;\n}\n\nexport interface IDocument {\n\tkey: string;\n\tname: string;\n\tvalue: string;\n\ticonName: string;\n\tfileType: string;\n\tmodifiedBy: string;\n\tdateModified: string;\n\tdateModifiedValue: number;\n\tfileSize: string;\n\tfileSizeRaw: number;\n}\n\nexport class DetailsListDocumentsExample extends React.Component<\n\tany,\n\tIDetailsListDocumentsExampleState\n> {\n\tprivate _selection: Selection;\n\tprivate _allItems: IDocument[];\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis._allItems = _generateDocuments();\n\n\t\tconst columns: IColumn[] = [\n\t\t\t{\n\t\t\t\tkey: 'column1',\n\t\t\t\tname: 'File Type',\n\t\t\t\tclassName: classNames.fileIconCell,\n\t\t\t\ticonClassName: classNames.fileIconHeaderIcon,\n\t\t\t\tariaLabel:\n\t\t\t\t\t'Column operations for File type, Press to sort on File type',\n\t\t\t\ticonName: 'Page',\n\t\t\t\tisIconOnly: true,\n\t\t\t\tfieldName: 'name',\n\t\t\t\tminWidth: 16,\n\t\t\t\tmaxWidth: 16,\n\t\t\t\tonColumnClick: this._onColumnClick,\n\t\t\t\tonRender: (item: IDocument) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tsrc={item.iconName}\n\t\t\t\t\t\t\tclassName={classNames.fileIconImg}\n\t\t\t\t\t\t\talt={item.fileType + ' file icon'}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'column2',\n\t\t\t\tname: 'Name',\n\t\t\t\tfieldName: 'name',\n\t\t\t\tminWidth: 210,\n\t\t\t\tmaxWidth: 350,\n\t\t\t\tisRowHeader: true,\n\t\t\t\tisResizable: true,\n\t\t\t\tisSorted: true,\n\t\t\t\tisSortedDescending: false,\n\t\t\t\tsortAscendingAriaLabel: 'Sorted A to Z',\n\t\t\t\tsortDescendingAriaLabel: 'Sorted Z to A',\n\t\t\t\tonColumnClick: this._onColumnClick,\n\t\t\t\tdata: 'string',\n\t\t\t\tisPadded: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'column3',\n\t\t\t\tname: 'Date Modified',\n\t\t\t\tfieldName: 'dateModifiedValue',\n\t\t\t\tminWidth: 70,\n\t\t\t\tmaxWidth: 90,\n\t\t\t\tisResizable: true,\n\t\t\t\tonColumnClick: this._onColumnClick,\n\t\t\t\tdata: 'number',\n\t\t\t\tonRender: (item: IDocument) => {\n\t\t\t\t\treturn <span>{item.dateModified}</span>;\n\t\t\t\t},\n\t\t\t\tisPadded: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'column4',\n\t\t\t\tname: 'Modified By',\n\t\t\t\tfieldName: 'modifiedBy',\n\t\t\t\tminWidth: 70,\n\t\t\t\tmaxWidth: 90,\n\t\t\t\tisResizable: true,\n\t\t\t\tisCollapsible: true,\n\t\t\t\tdata: 'string',\n\t\t\t\tonColumnClick: this._onColumnClick,\n\t\t\t\tonRender: (item: IDocument) => {\n\t\t\t\t\treturn <span>{item.modifiedBy}</span>;\n\t\t\t\t},\n\t\t\t\tisPadded: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'column5',\n\t\t\t\tname: 'File Size',\n\t\t\t\tfieldName: 'fileSizeRaw',\n\t\t\t\tminWidth: 70,\n\t\t\t\tmaxWidth: 90,\n\t\t\t\tisResizable: true,\n\t\t\t\tisCollapsible: true,\n\t\t\t\tdata: 'number',\n\t\t\t\tonColumnClick: this._onColumnClick,\n\t\t\t\tonRender: (item: IDocument) => {\n\t\t\t\t\treturn <span>{item.fileSize}</span>;\n\t\t\t\t},\n\t\t\t},\n\t\t];\n\n\t\tthis._selection = new Selection({\n\t\t\tonSelectionChanged: () => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tselectionDetails: this._getSelectionDetails(),\n\t\t\t\t});\n\t\t\t},\n\t\t});\n\n\t\tthis.state = {\n\t\t\titems: this._allItems,\n\t\t\tcolumns: columns,\n\t\t\tselectionDetails: this._getSelectionDetails(),\n\t\t\tisModalSelection: false,\n\t\t\tisCompactMode: false,\n\t\t\tannouncedMessage: undefined,\n\t\t};\n\t}\n\n\tpublic render() {\n\t\tconst {\n\t\t\tcolumns,\n\t\t\titems,\n\t\t\tselectionDetails,\n\t\t\tisModalSelection,\n\t\t\tannouncedMessage,\n\t\t} = this.state;\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{/* <div className={classNames.controlWrapper}>\n\t\t\t\t\t<Toggle\n\t\t\t\t\t\tlabel='Enable modal selection'\n\t\t\t\t\t\tchecked={isModalSelection}\n\t\t\t\t\t\tonChange={this._onChangeModalSelection}\n\t\t\t\t\t\tonText='Modal'\n\t\t\t\t\t\toffText='Normal'\n\t\t\t\t\t\tstyles={controlStyles}\n\t\t\t\t\t/>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tlabel='Filter by name:'\n\t\t\t\t\t\tonChange={this._onChangeText}\n\t\t\t\t\t\tstyles={controlStyles}\n\t\t\t\t\t/>\n\t\t\t\t\t<Announced\n\t\t\t\t\t\tmessage={`Number of items after filter applied: ${items.length}.`}\n\t\t\t\t\t/>\n\t\t\t\t</div> */}\n\t\t\t\t{/* <div className={classNames.selectionDetails}>\n\t\t\t\t\t{selectionDetails}\n\t\t\t\t</div> */}\n\t\t\t\t<Announced message={selectionDetails} />\n\t\t\t\t{announcedMessage ? (\n\t\t\t\t\t<Announced message={announcedMessage} />\n\t\t\t\t) : undefined}\n\t\t\t\t<MarqueeSelection\n\t\t\t\t\tselection={this._selection}\n\t\t\t\t\tstyle={{ marginLeft: 40, marginRight: 40 }}\n\t\t\t\t>\n\t\t\t\t\t<DetailsList\n\t\t\t\t\t\titems={items}\n\t\t\t\t\t\tcolumns={columns}\n\t\t\t\t\t\tselectionMode={SelectionMode.multiple}\n\t\t\t\t\t\tgetKey={this._getKey}\n\t\t\t\t\t\tsetKey='multiple'\n\t\t\t\t\t\tlayoutMode={DetailsListLayoutMode.justified}\n\t\t\t\t\t\tisHeaderVisible={true}\n\t\t\t\t\t\tselection={this._selection}\n\t\t\t\t\t\tselectionPreservedOnEmptyClick={true}\n\t\t\t\t\t\tonItemInvoked={this._onItemInvoked}\n\t\t\t\t\t\tenterModalSelectionOnTouch={true}\n\t\t\t\t\t\tariaLabelForSelectionColumn='Toggle selection'\n\t\t\t\t\t\tariaLabelForSelectAllCheckbox='Toggle selection for all items'\n\t\t\t\t\t\tcheckButtonAriaLabel='Row checkbox'\n\t\t\t\t\t/>\n\t\t\t\t</MarqueeSelection>\n\t\t\t</>\n\t\t);\n\t}\n\n\tpublic componentDidUpdate(\n\t\tpreviousProps: any,\n\t\tpreviousState: IDetailsListDocumentsExampleState\n\t) {\n\t\tif (\n\t\t\tpreviousState.isModalSelection !== this.state.isModalSelection &&\n\t\t\t!this.state.isModalSelection\n\t\t) {\n\t\t\tthis._selection.setAllSelected(false);\n\t\t}\n\t}\n\n\tprivate _getKey(item: any, index?: number): string {\n\t\treturn item.key;\n\t}\n\n\tprivate _onChangeModalSelection = (\n\t\tev: React.MouseEvent<HTMLElement>,\n\t\tchecked: boolean\n\t): void => {\n\t\tthis.setState({ isModalSelection: checked });\n\t};\n\n\tprivate _onChangeText = (\n\t\tev: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>,\n\t\ttext: string\n\t): void => {\n\t\tthis.setState({\n\t\t\titems: text\n\t\t\t\t? this._allItems.filter(\n\t\t\t\t\t\t(i) => i.name.toLowerCase().indexOf(text) > -1\n\t\t\t\t  )\n\t\t\t\t: this._allItems,\n\t\t});\n\t};\n\n\tprivate _onItemInvoked(item: IDocument): void {\n\t\tDataStore.update((s) => {\n\t\t\ts.Modals.FilePanel.fileId = item.name;\n\t\t\ts.Modals.FilePanel.isOpen = true;\n\t\t});\n\t}\n\n\tprivate _getSelectionDetails(): string {\n\t\tconst selectionCount = this._selection.getSelectedCount();\n\n\t\tswitch (selectionCount) {\n\t\t\tcase 0:\n\t\t\t\treturn 'No items selected';\n\t\t\tcase 1:\n\t\t\t\treturn (\n\t\t\t\t\t'1 item selected: ' +\n\t\t\t\t\t(this._selection.getSelection()[0] as IDocument).name\n\t\t\t\t);\n\t\t\tdefault:\n\t\t\t\treturn `${selectionCount} items selected`;\n\t\t}\n\t}\n\n\tprivate _onColumnClick = (\n\t\tev: React.MouseEvent<HTMLElement>,\n\t\tcolumn: IColumn\n\t): void => {\n\t\tconst { columns, items } = this.state;\n\t\tconst newColumns: IColumn[] = columns.slice();\n\t\tconst currColumn: IColumn = newColumns.filter(\n\t\t\t(currCol) => column.key === currCol.key\n\t\t)[0];\n\t\tnewColumns.forEach((newCol: IColumn) => {\n\t\t\tif (newCol === currColumn) {\n\t\t\t\tcurrColumn.isSortedDescending = !currColumn.isSortedDescending;\n\t\t\t\tcurrColumn.isSorted = true;\n\t\t\t\tthis.setState({\n\t\t\t\t\tannouncedMessage: `${currColumn.name} is sorted ${\n\t\t\t\t\t\tcurrColumn.isSortedDescending\n\t\t\t\t\t\t\t? 'descending'\n\t\t\t\t\t\t\t: 'ascending'\n\t\t\t\t\t}`,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tnewCol.isSorted = false;\n\t\t\t\tnewCol.isSortedDescending = true;\n\t\t\t}\n\t\t});\n\t\tconst newItems = _copyAndSort(\n\t\t\titems,\n\t\t\tcurrColumn.fieldName!,\n\t\t\tcurrColumn.isSortedDescending\n\t\t);\n\t\tthis.setState({\n\t\t\tcolumns: newColumns,\n\t\t\titems: newItems,\n\t\t});\n\t};\n}\n\nfunction _copyAndSort<T>(\n\titems: T[],\n\tcolumnKey: string,\n\tisSortedDescending?: boolean\n): T[] {\n\tconst key = columnKey as keyof T;\n\treturn items\n\t\t.slice(0)\n\t\t.sort((a: T, b: T) =>\n\t\t\t(isSortedDescending ? a[key] < b[key] : a[key] > b[key]) ? 1 : -1\n\t\t);\n}\n\nfunction _generateDocuments() {\n\tconst items: IDocument[] = [];\n\tfor (let i = 0; i < 500; i++) {\n\t\tconst randomDate = _randomDate(new Date(2012, 0, 1), new Date());\n\t\tconst randomFileSize = _randomFileSize();\n\t\tconst randomFileType = _randomFileIcon();\n\t\tlet fileName = _lorem(2);\n\t\tfileName =\n\t\t\tfileName.charAt(0).toUpperCase() +\n\t\t\tfileName.slice(1).concat(`.${randomFileType.docType}`);\n\t\tlet userName = _lorem(2);\n\t\tuserName = userName\n\t\t\t.split(' ')\n\t\t\t.map((name: string) => name.charAt(0).toUpperCase() + name.slice(1))\n\t\t\t.join(' ');\n\t\titems.push({\n\t\t\tkey: i.toString(),\n\t\t\tname: fileName,\n\t\t\tvalue: fileName,\n\t\t\ticonName: randomFileType.url,\n\t\t\tfileType: randomFileType.docType,\n\t\t\tmodifiedBy: userName,\n\t\t\tdateModified: randomDate.dateFormatted,\n\t\t\tdateModifiedValue: randomDate.value,\n\t\t\tfileSize: randomFileSize.value,\n\t\t\tfileSizeRaw: randomFileSize.rawSize,\n\t\t});\n\t}\n\treturn items;\n}\n\nfunction _randomDate(\n\tstart: Date,\n\tend: Date\n): { value: number; dateFormatted: string } {\n\tconst date: Date = new Date(\n\t\tstart.getTime() + Math.random() * (end.getTime() - start.getTime())\n\t);\n\treturn {\n\t\tvalue: date.valueOf(),\n\t\tdateFormatted: date.toLocaleDateString(),\n\t};\n}\n\nconst FILE_ICONS: { name: string }[] = [\n\t{ name: 'accdb' },\n\t{ name: 'audio' },\n\t{ name: 'code' },\n\t{ name: 'csv' },\n\t{ name: 'docx' },\n\t{ name: 'dotx' },\n\t{ name: 'mpp' },\n\t{ name: 'mpt' },\n\t{ name: 'model' },\n\t{ name: 'one' },\n\t{ name: 'onetoc' },\n\t{ name: 'potx' },\n\t{ name: 'ppsx' },\n\t{ name: 'pdf' },\n\t{ name: 'photo' },\n\t{ name: 'pptx' },\n\t{ name: 'presentation' },\n\t{ name: 'potx' },\n\t{ name: 'pub' },\n\t{ name: 'rtf' },\n\t{ name: 'spreadsheet' },\n\t{ name: 'txt' },\n\t{ name: 'vector' },\n\t{ name: 'vsdx' },\n\t{ name: 'vssx' },\n\t{ name: 'vstx' },\n\t{ name: 'xlsx' },\n\t{ name: 'xltx' },\n\t{ name: 'xsn' },\n];\n\nfunction _randomFileIcon(): { docType: string; url: string } {\n\tconst docType: string =\n\t\tFILE_ICONS[Math.floor(Math.random() * FILE_ICONS.length)].name;\n\treturn {\n\t\tdocType,\n\t\turl: `https://static2.sharepointonline.com/files/fabric/assets/item-types/16/${docType}.svg`,\n\t};\n}\n\nfunction _randomFileSize(): { value: string; rawSize: number } {\n\tconst fileSize: number = Math.floor(Math.random() * 100) + 30;\n\treturn {\n\t\tvalue: `${fileSize} KB`,\n\t\trawSize: fileSize,\n\t};\n}\n\nconst LOREM_IPSUM = (\n\t'lorem ipsum dolor sit amet consectetur adipiscing elit sed do eiusmod tempor incididunt ut ' +\n\t'labore et dolore magna aliqua ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut ' +\n\t'aliquip ex ea commodo consequat duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore ' +\n\t'eu fugiat nulla pariatur excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt '\n).split(' ');\nlet loremIndex = 0;\nfunction _lorem(wordCount: number): string {\n\tconst startIndex =\n\t\tloremIndex + wordCount > LOREM_IPSUM.length ? 0 : loremIndex;\n\tloremIndex = startIndex + wordCount;\n\treturn LOREM_IPSUM.slice(startIndex, loremIndex).join(' ');\n}\n\nconst FilesList = () => {\n\treturn (\n\t\t<div>\n\t\t\t<MenuBar type='Files' />\n\t\t\t<DetailsListDocumentsExample />\n\t\t</div>\n\t);\n};\n\nexport default FilesList;\n","/Users/Marcus/Projects/Audex/Audex.Desktop/src/Components/Modals/FilePanel.tsx",["114"],"import { Panel } from '@fluentui/react';\nimport { useStoreState } from 'pullstate';\nimport React from 'react';\nimport { DataStore } from '../../Data/DataStore';\nimport { IModal } from './Modals';\n\nexport interface IFilePanel extends IModal {\n\tfileId: string;\n}\n\nconst FilePanel = () => {\n\tconst modalState = useStoreState(DataStore, (s) => s.Modals.FilePanel);\n\n\tconst onDismissed = () => {\n\t\tDataStore.update((s) => {\n\t\t\ts.Modals.FilePanel.isOpen = false;\n\t\t});\n\t};\n\n\treturn (\n\t\t<Panel\n\t\t\theaderText='File'\n\t\t\tisOpen={modalState.isOpen}\n\t\t\tonDismiss={onDismissed}\n\t\t\tisLightDismiss\n\t\t>\n\t\t\t<p>File ID: {modalState.fileId}</p>\n\t\t</Panel>\n\t);\n};\nexport default FilePanel;\n","/Users/Marcus/Projects/Audex/Audex.Desktop/src/Components/Modals/Modals.tsx",["115"],"/Users/Marcus/Projects/Audex/Audex.Desktop/src/Components/Modals/FileTransferPanel.tsx",["116","117","118","119"],"/Users/Marcus/Projects/Audex/Audex.Desktop/src/Components/BackToTop.tsx",["120","121"],"import {\n\tFontIcon,\n\tgetTheme,\n\tIconButton,\n\tmergeStyleSets,\n} from '@fluentui/react';\nimport BackToTopButton from 'react-back-to-top-button';\nimport React from 'react';\n\nconst BackToTop = () => {\n\tconst { palette } = getTheme();\n\n\treturn (\n\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t//@ts-ignore\n\t\t<BackToTopButton showAt={100} speed={1500} easing='easeOutSine'>\n\t\t\t<FontIcon\n\t\t\t\tclassName={\n\t\t\t\t\tmergeStyleSets({\n\t\t\t\t\t\ticon: {\n\t\t\t\t\t\t\tselectors: {\n\t\t\t\t\t\t\t\t'&:hover': {\n\t\t\t\t\t\t\t\t\tbackground: palette.neutralLight,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tcursor: 'pointer',\n\t\t\t\t\t\t\tpadding: 5,\n\t\t\t\t\t\t\tcolor: palette.accent,\n\t\t\t\t\t\t\tfontSize: 16,\n\t\t\t\t\t\t},\n\t\t\t\t\t}).icon\n\t\t\t\t}\n\t\t\t\ticonName='ChevronUp'\n\t\t\t/>\n\t\t</BackToTopButton>\n\t);\n};\n\nexport default BackToTop;\n","/Users/Marcus/Projects/Audex/Audex.Desktop/src/Data/DataStore.ts",["122"],"/Users/Marcus/Projects/Audex/Audex.Desktop/src/Components/Uploading/FileUnit.tsx",["123","124","125","126"],"/Users/Marcus/Projects/Audex/Audex.Desktop/src/Components/Uploading/FileUpload.tsx",["127","128","129","130","131"],"/Users/Marcus/Projects/Audex/Audex.Desktop/src/Components/Uploading/FileDrop.tsx",["132","133"],"/Users/Marcus/Projects/Audex/Audex.Desktop/src/Hooks/useResponsive.ts",["134","135","136","137"],{"ruleId":"138","severity":1,"message":"139","line":14,"column":13,"nodeType":"140","messageId":"141","endLine":14,"endColumn":18},{"ruleId":"138","severity":1,"message":"139","line":116,"column":17,"nodeType":"140","messageId":"141","endLine":116,"endColumn":34},{"ruleId":"142","severity":1,"message":"143","line":3,"column":2,"nodeType":"144","messageId":"145","endLine":3,"endColumn":10},{"ruleId":"142","severity":1,"message":"146","line":5,"column":2,"nodeType":"144","messageId":"145","endLine":5,"endColumn":12},{"ruleId":"142","severity":1,"message":"147","line":18,"column":8,"nodeType":"144","messageId":"145","endLine":18,"endColumn":17},{"ruleId":"138","severity":1,"message":"139","line":20,"column":21,"nodeType":"140","messageId":"141","endLine":20,"endColumn":26},{"ruleId":"142","severity":1,"message":"148","line":24,"column":6,"nodeType":"144","messageId":"145","endLine":24,"endColumn":7},{"ruleId":"138","severity":1,"message":"139","line":14,"column":18,"nodeType":"140","messageId":"141","endLine":14,"endColumn":23},{"ruleId":"138","severity":1,"message":"139","line":30,"column":22,"nodeType":"140","messageId":"141","endLine":30,"endColumn":27},{"ruleId":"142","severity":1,"message":"149","line":3,"column":2,"nodeType":"144","messageId":"145","endLine":3,"endColumn":15},{"ruleId":"142","severity":1,"message":"150","line":13,"column":10,"nodeType":"144","messageId":"145","endLine":13,"endColumn":14},{"ruleId":"138","severity":1,"message":"139","line":18,"column":19,"nodeType":"140","messageId":"141","endLine":18,"endColumn":24},{"ruleId":"142","severity":1,"message":"151","line":28,"column":3,"nodeType":"144","messageId":"145","endLine":28,"endColumn":7},{"ruleId":"142","severity":1,"message":"152","line":29,"column":3,"nodeType":"144","messageId":"145","endLine":29,"endColumn":14},{"ruleId":"142","severity":1,"message":"153","line":30,"column":3,"nodeType":"144","messageId":"145","endLine":30,"endColumn":18},{"ruleId":"142","severity":1,"message":"154","line":11,"column":2,"nodeType":"144","messageId":"145","endLine":11,"endColumn":8},{"ruleId":"142","severity":1,"message":"155","line":12,"column":2,"nodeType":"144","messageId":"145","endLine":12,"endColumn":11},{"ruleId":"142","severity":1,"message":"156","line":53,"column":7,"nodeType":"144","messageId":"145","endLine":53,"endColumn":20},{"ruleId":"157","severity":1,"message":"158","line":83,"column":2,"nodeType":"159","messageId":"160","endLine":83,"endColumn":5,"suggestions":"161"},{"ruleId":"138","severity":1,"message":"162","line":89,"column":14,"nodeType":"144","messageId":"163","endLine":89,"endColumn":19},{"ruleId":"138","severity":1,"message":"139","line":197,"column":2,"nodeType":"164","messageId":"141","endLine":197,"endColumn":17},{"ruleId":"142","severity":1,"message":"165","line":202,"column":4,"nodeType":"144","messageId":"145","endLine":202,"endColumn":20},{"ruleId":"138","severity":1,"message":"139","line":258,"column":2,"nodeType":"164","messageId":"141","endLine":261,"endColumn":3},{"ruleId":"138","severity":1,"message":"166","line":259,"column":3,"nodeType":"144","messageId":"167","endLine":259,"endColumn":21},{"ruleId":"157","severity":1,"message":"158","line":259,"column":18,"nodeType":"159","messageId":"160","endLine":259,"endColumn":21,"suggestions":"168"},{"ruleId":"157","severity":1,"message":"158","line":270,"column":24,"nodeType":"159","messageId":"160","endLine":270,"endColumn":27,"suggestions":"169"},{"ruleId":"142","severity":1,"message":"170","line":270,"column":29,"nodeType":"144","messageId":"145","endLine":270,"endColumn":43},{"ruleId":"171","severity":1,"message":"172","line":344,"column":4,"nodeType":"173","messageId":"174","endLine":344,"endColumn":25},{"ruleId":"138","severity":1,"message":"139","line":474,"column":19,"nodeType":"140","messageId":"141","endLine":474,"endColumn":24},{"ruleId":"138","severity":1,"message":"139","line":11,"column":19,"nodeType":"140","messageId":"141","endLine":11,"endColumn":24},{"ruleId":"138","severity":1,"message":"139","line":9,"column":16,"nodeType":"140","messageId":"141","endLine":9,"endColumn":21},{"ruleId":"138","severity":1,"message":"139","line":62,"column":34,"nodeType":"140","messageId":"141","endLine":62,"endColumn":39},{"ruleId":"157","severity":1,"message":"158","line":69,"column":27,"nodeType":"159","messageId":"160","endLine":69,"endColumn":30,"suggestions":"175"},{"ruleId":"142","severity":1,"message":"176","line":74,"column":21,"nodeType":"144","messageId":"145","endLine":74,"endColumn":28},{"ruleId":"157","severity":1,"message":"158","line":74,"column":25,"nodeType":"159","messageId":"160","endLine":74,"endColumn":28,"suggestions":"177"},{"ruleId":"142","severity":1,"message":"146","line":4,"column":2,"nodeType":"144","messageId":"145","endLine":4,"endColumn":12},{"ruleId":"138","severity":1,"message":"139","line":10,"column":19,"nodeType":"140","messageId":"141","endLine":10,"endColumn":24},{"ruleId":"138","severity":1,"message":"139","line":53,"column":26,"nodeType":"140","messageId":"141","endLine":53,"endColumn":31},{"ruleId":"142","severity":1,"message":"178","line":7,"column":2,"nodeType":"144","messageId":"145","endLine":7,"endColumn":7},{"ruleId":"142","severity":1,"message":"179","line":12,"column":10,"nodeType":"144","messageId":"145","endLine":12,"endColumn":19},{"ruleId":"138","severity":1,"message":"139","line":29,"column":18,"nodeType":"140","messageId":"141","endLine":29,"endColumn":35},{"ruleId":"142","severity":1,"message":"180","line":39,"column":17,"nodeType":"144","messageId":"145","endLine":39,"endColumn":24},{"ruleId":"138","severity":1,"message":"139","line":8,"column":20,"nodeType":"140","messageId":"141","endLine":8,"endColumn":25},{"ruleId":"171","severity":1,"message":"172","line":13,"column":24,"nodeType":"173","messageId":"174","endLine":13,"endColumn":41},{"ruleId":"171","severity":1,"message":"172","line":13,"column":24,"nodeType":"173","messageId":"174","endLine":13,"endColumn":34,"suggestions":"181"},{"ruleId":"171","severity":1,"message":"172","line":13,"column":24,"nodeType":"173","messageId":"174","endLine":13,"endColumn":26,"suggestions":"182"},{"ruleId":"171","severity":1,"message":"172","line":19,"column":4,"nodeType":"173","messageId":"174","endLine":19,"endColumn":21,"suggestions":"183"},{"ruleId":"142","severity":1,"message":"178","line":1,"column":20,"nodeType":"144","messageId":"145","endLine":1,"endColumn":25},{"ruleId":"138","severity":1,"message":"139","line":11,"column":18,"nodeType":"140","messageId":"141","endLine":11,"endColumn":35},{"ruleId":"142","severity":1,"message":"184","line":29,"column":5,"nodeType":"144","messageId":"145","endLine":29,"endColumn":6},{"ruleId":"142","severity":1,"message":"185","line":29,"column":17,"nodeType":"144","messageId":"145","endLine":29,"endColumn":18},{"ruleId":"171","severity":1,"message":"172","line":42,"column":16,"nodeType":"173","messageId":"174","endLine":42,"endColumn":56,"suggestions":"186"},{"ruleId":"142","severity":1,"message":"187","line":42,"column":29,"nodeType":"144","messageId":"145","endLine":42,"endColumn":30},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","@typescript-eslint/no-unused-vars","'FontIcon' is defined but never used.","Identifier","unusedVar","'IconButton' is defined but never used.","'BackToTop' is defined but never used.","'e' is assigned a value but never used.","'INavLinkGroup' is defined but never used.","'Link' is defined but never used.","'size' is assigned a value but never used.","'orientation' is assigned a value but never used.","'screenIsAtLeast' is assigned a value but never used.","'Toggle' is defined but never used.","'TextField' is defined but never used.","'controlStyles' is assigned a value but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["188","189"],"Argument 'props' should be typed.","missingArgType","FunctionExpression","'isModalSelection' is assigned a value but never used.","Argument 'previousProps' should be typed with a non-any type.","anyTypedArg",["190","191"],["192","193"],"'index' is defined but never used.","@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull",["194","195"],"'ev' is defined but never used.",["196","197"],"'Stack' is defined but never used.","'useStores' is defined but never used.","'loading' is assigned a value but never used.",["198"],["199"],["200"],"'a' is defined but never used.","'b' is defined but never used.",["201"],"'_' is defined but never used.",{"messageId":"202","fix":"203","desc":"204"},{"messageId":"205","fix":"206","desc":"207"},{"messageId":"202","fix":"208","desc":"204"},{"messageId":"205","fix":"209","desc":"207"},{"messageId":"202","fix":"210","desc":"204"},{"messageId":"205","fix":"211","desc":"207"},{"messageId":"202","fix":"212","desc":"204"},{"messageId":"205","fix":"213","desc":"207"},{"messageId":"202","fix":"214","desc":"204"},{"messageId":"205","fix":"215","desc":"207"},{"messageId":"216","fix":"217","desc":"218"},{"messageId":"216","fix":"219","desc":"218"},{"messageId":"216","fix":"220","desc":"218"},{"messageId":"216","fix":"221","desc":"218"},"suggestUnknown",{"range":"222","text":"223"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"222","text":"224"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"225","text":"223"},{"range":"225","text":"224"},{"range":"226","text":"223"},{"range":"226","text":"224"},{"range":"227","text":"223"},{"range":"227","text":"224"},{"range":"228","text":"223"},{"range":"228","text":"224"},"suggestOptionalChain",{"range":"229","text":"230"},"Consider using the optional chain operator `?.` instead. This operator includes runtime checks, so it is safer than the compile-only non-null assertion operator.",{"range":"231","text":"230"},{"range":"232","text":"230"},{"range":"233","text":"234"},[1506,1509],"unknown","never",[5659,5662],[5907,5910],[1780,1783],[1870,1873],[522,523],"?",[514,515],[719,720],[1044,1045],"?."]