[{"/Users/Marcus/Projects/Audex/Audex.Desktop/src/App.tsx":"1","/Users/Marcus/Projects/Audex/Audex.Desktop/src/index.js":"2"},{"size":3962,"mtime":1608409071213,"results":"3","hashOfConfig":"4"},{"size":155,"mtime":1608276057398,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"8"},"qk0n9f",{"filePath":"9","messages":"10","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Marcus/Projects/Audex/Audex.Desktop/src/App.tsx",["11","12","13","14","15","16","17"],"import * as React from 'react';\nimport {\n\tinitializeIcons,\n\tLink,\n\tMessageBar,\n\tMessageBarButton,\n\tMessageBarType,\n\tPartialTheme,\n\tPrimaryButton,\n\tProgressIndicator,\n\tThemeProvider,\n} from '@fluentui/react';\nimport { useEffect, useState } from 'react';\nimport Axios from 'axios';\n\nconst appTheme: PartialTheme = {\n\tpalette: {\n\t\tthemePrimary: '#2196F3',\n\t\tthemeLighterAlt: '#01060a',\n\t\tthemeLighter: '#051827',\n\t\tthemeLight: '#0a2d49',\n\t\tthemeTertiary: '#145991',\n\t\tthemeSecondary: '#1e83d5',\n\t\tthemeDarkAlt: '#379ff4',\n\t\tthemeDark: '#55adf5',\n\t\tthemeDarker: '#80c2f8',\n\t\tneutralLighterAlt: '#25313c',\n\t\tneutralLighter: '#2b3844',\n\t\tneutralLight: '#364351',\n\t\tneutralQuaternaryAlt: '#3c4a59',\n\t\tneutralQuaternary: '#42515f',\n\t\tneutralTertiaryAlt: '#5b6b7a',\n\t\tneutralTertiary: '#f8fafc',\n\t\tneutralSecondary: '#f9fafc',\n\t\tneutralPrimaryAlt: '#fafbfd',\n\t\tneutralPrimary: '#F5F7FA',\n\t\tneutralDark: '#fdfdfe',\n\t\tblack: '#fefefe',\n\t\twhite: '#1F2933',\n\t},\n};\n\nenum FileState {\n\tEmpty,\n\tUploading,\n\tSuccessful,\n\tError,\n}\n\nconst App = () => {\n\tinitializeIcons();\n\n\tconst [file, setFile] = useState<File>();\n\tconst [progress, setProgress] = useState(0);\n\tconst [fileState, setFileState] = useState<FileState>(FileState.Empty);\n\tconst [errorMessage, setErrorMessage] = useState('');\n\n\tconst onFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n\t\tconst f = e!.target!.files![0];\n\t\tsetFile(f);\n\t};\n\n\tuseEffect(() => {\n\t\tif (file != undefined) uploadFile();\n\t}, [file]);\n\n\tconst uploadFile = () => {\n\t\tsetFileState(FileState.Uploading);\n\n\t\tconst formData = new FormData();\n\t\tconsole.log(file);\n\t\tformData.append('files', file!, file?.name);\n\t\tAxios.post('http://localhost:5000/api/v1/Upload', formData, {\n\t\t\theaders: { 'Content-Type': 'multipart/form-data' },\n\t\t\tonUploadProgress: (progressEvent) => {\n\t\t\t\tconst totalLength = progressEvent.lengthComputable\n\t\t\t\t\t? progressEvent.total\n\t\t\t\t\t: progressEvent.target.getResponseHeader(\n\t\t\t\t\t\t\t'content-length'\n\t\t\t\t\t  ) ||\n\t\t\t\t\t  progressEvent.target.getResponseHeader(\n\t\t\t\t\t\t\t'x-decompressed-content-length'\n\t\t\t\t\t  );\n\t\t\t\tconsole.log('onUploadProgress', totalLength);\n\t\t\t\tif (totalLength !== null) {\n\t\t\t\t\tsetProgress(\n\t\t\t\t\t\tMath.round((progressEvent.loaded * 100) / totalLength)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t},\n\t\t})\n\t\t\t.then(() => {\n\t\t\t\tsetFileState(FileState.Successful);\n\t\t\t})\n\t\t\t.catch((e) => {\n\t\t\t\tsetFileState(FileState.Error);\n\t\t\t\tsetErrorMessage(e.message);\n\t\t\t})\n\t\t\t.finally(() => {\n\t\t\t\tsetProgress(0);\n\t\t\t\tsetFile(undefined);\n\t\t\t});\n\t};\n\n\tconst ErrorMessage = ({ message }: { message: string }) => (\n\t\t<MessageBar\n\t\t\tmessageBarType={MessageBarType.error}\n\t\t\tisMultiline={false}\n\t\t\tonDismiss={() => setFileState(FileState.Empty)}\n\t\t\tdismissButtonAriaLabel='Close'\n\t\t>\n\t\t\tAn error has occured: {message}.\n\t\t\t<Link href='www.bing.com' target='_blank'>\n\t\t\t\tLearn more\n\t\t\t</Link>\n\t\t</MessageBar>\n\t);\n\n\tconst SuccessMessage = () => (\n\t\t<MessageBar\n\t\t\t// actions={\n\t\t\t// \t<div>\n\t\t\t// \t\t<MessageBarButton>Yes</MessageBarButton>\n\t\t\t// \t\t<MessageBarButton>No</MessageBarButton>\n\t\t\t// \t</div>\n\t\t\t// }\n\t\t\tonDismiss={() => setFileState(FileState.Empty)}\n\t\t\tmessageBarType={MessageBarType.success}\n\t\t\tisMultiline={false}\n\t\t>\n\t\t\tFile {file?.name} successfully uploaded.\n\t\t\t<Link href='www.bing.com' target='_blank'>\n\t\t\t\tLearn More\n\t\t\t</Link>\n\t\t</MessageBar>\n\t);\n\n\treturn (\n\t\t// <ThemeProvider theme={appTheme}>\n\t\t<ThemeProvider>\n\t\t\t<div className='App'>\n\t\t\t\t<input\n\t\t\t\t\tid='file-upload'\n\t\t\t\t\ttype='file'\n\t\t\t\t\tonChange={onFileChange}\n\t\t\t\t\thidden\n\t\t\t\t/>\n\t\t\t\t<PrimaryButton\n\t\t\t\t\ttext='Upload File'\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsetFileState(FileState.Empty);\n\t\t\t\t\t\tdocument.getElementById('file-upload')?.click();\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t{fileState === FileState.Uploading ?? (\n\t\t\t\t\t<ProgressIndicator percentComplete={progress} />\n\t\t\t\t)}\n\t\t\t\t{fileState === FileState.Successful && <SuccessMessage />}\n\t\t\t\t{fileState === FileState.Error && (\n\t\t\t\t\t<ErrorMessage message={errorMessage} />\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</ThemeProvider>\n\t);\n};\n\nexport default App;\n","/Users/Marcus/Projects/Audex/Audex.Desktop/src/index.js",[],{"ruleId":"18","severity":1,"message":"19","line":6,"column":2,"nodeType":"20","messageId":"21","endLine":6,"endColumn":18},{"ruleId":"18","severity":1,"message":"22","line":16,"column":7,"nodeType":"20","messageId":"21","endLine":16,"endColumn":29},{"ruleId":"23","severity":1,"message":"24","line":50,"column":13,"nodeType":"25","messageId":"26","endLine":50,"endColumn":18},{"ruleId":"27","severity":1,"message":"28","line":59,"column":13,"nodeType":"29","messageId":"30","endLine":59,"endColumn":30,"suggestions":"31"},{"ruleId":"27","severity":1,"message":"28","line":59,"column":13,"nodeType":"29","messageId":"30","endLine":59,"endColumn":23,"suggestions":"32"},{"ruleId":"27","severity":1,"message":"28","line":59,"column":13,"nodeType":"29","messageId":"30","endLine":59,"endColumn":15,"suggestions":"33"},{"ruleId":"27","severity":1,"message":"28","line":72,"column":28,"nodeType":"29","messageId":"30","endLine":72,"endColumn":33},"@typescript-eslint/no-unused-vars","'MessageBarButton' is defined but never used.","Identifier","unusedVar","'appTheme' is assigned a value but never used.","@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull",["34"],["35"],["36"],{"messageId":"37","fix":"38","desc":"39"},{"messageId":"37","fix":"40","desc":"39"},{"messageId":"37","fix":"41","desc":"39"},"suggestOptionalChain",{"range":"42","text":"43"},"Consider using the optional chain operator `?.` instead. This operator includes runtime checks, so it is safer than the compile-only non-null assertion operator.",{"range":"44","text":"45"},{"range":"46","text":"45"},[1369,1370],"?.",[1362,1363],"?",[1354,1355]]