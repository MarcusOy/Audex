[{"/Users/Marcus/Projects/Audex/Audex.Desktop/src/App.tsx":"1","/Users/Marcus/Projects/Audex/Audex.Desktop/src/index.js":"2","/Users/Marcus/Projects/Audex/Audex.Desktop/src/Components/MenuBar.tsx":"3","/Users/Marcus/Projects/Audex/Audex.Desktop/src/Components/RecentFiles.tsx":"4","/Users/Marcus/Projects/Audex/Audex.Desktop/src/Pages/HomePage.tsx":"5","/Users/Marcus/Projects/Audex/Audex.Desktop/src/Components/Header/LoggedInUser.tsx":"6","/Users/Marcus/Projects/Audex/Audex.Desktop/src/Components/Header/HeaderBar.tsx":"7"},{"size":824,"mtime":1609388427014,"results":"8","hashOfConfig":"9"},{"size":155,"mtime":1608276057398,"results":"10","hashOfConfig":"9"},{"size":2696,"mtime":1609389549118,"results":"11","hashOfConfig":"9"},{"size":2541,"mtime":1609437424325,"results":"12","hashOfConfig":"9"},{"size":1046,"mtime":1609388451820,"results":"13","hashOfConfig":"9"},{"size":1940,"mtime":1609384593932,"results":"14","hashOfConfig":"9"},{"size":2025,"mtime":1609387530676,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"qk0n9f",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/Marcus/Projects/Audex/Audex.Desktop/src/App.tsx",["33"],"import * as React from 'react';\nimport { initializeIcons, ThemeProvider } from '@fluentui/react';\nimport { initializeFileTypeIcons } from '@uifabric/file-type-icons';\nimport {\n\tBrowserRouter as Router,\n\tSwitch,\n\tRoute,\n\tRedirect,\n} from 'react-router-dom';\nimport HeaderBar from './Components/Header/HeaderBar';\nimport HomePage from './Pages/HomePage';\n\nconst App = () => {\n\tinitializeIcons();\n\tinitializeFileTypeIcons();\n\n\treturn (\n\t\t// <ThemeProvider theme={appTheme}>\n\t\t<ThemeProvider>\n\t\t\t<Router>\n\t\t\t\t<HeaderBar />\n\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path='/' exact>\n\t\t\t\t\t\t<Redirect to='/Home/Recent' />\n\t\t\t\t\t</Route>\n\n\t\t\t\t\t<Route path='/Home/:tab'>\n\t\t\t\t\t\t<HomePage />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path='/Users'></Route>\n\t\t\t\t\t<Route path='/Settings'></Route>\n\t\t\t\t</Switch>\n\t\t\t</Router>\n\t\t</ThemeProvider>\n\t);\n};\n\nexport default App;\n","/Users/Marcus/Projects/Audex/Audex.Desktop/src/index.js",[],"/Users/Marcus/Projects/Audex/Audex.Desktop/src/Components/MenuBar.tsx",["34"],"/Users/Marcus/Projects/Audex/Audex.Desktop/src/Components/RecentFiles.tsx",["35","36","37","38","39","40","41"],"import {\n\tActivityItem,\n\tIcon,\n\tIconButton,\n\tLink,\n\tList,\n\tScrollablePane,\n\tSpinner,\n\tSpinnerSize,\n\tText,\n} from '@fluentui/react';\nimport { useBoolean } from '@fluentui/react-hooks';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { getFileTypeIconProps, FileIconType } from '@uifabric/file-type-icons';\nimport BackToTop from 'react-back-to-top-button';\nimport React, { useState } from 'react';\nimport faker from 'faker';\nimport MenuBar from './MenuBar';\nimport FilePanel from './FilePanel';\n\nconst RecentFiles = () => {\n\tconst moreFakeRecent = () => {\n\t\treturn new Array(50).fill(null).map(\n\t\t\t(e) =>\n\t\t\t\t(e = {\n\t\t\t\t\tkey: faker.random.number(),\n\t\t\t\t\tactivityDescription: [\n\t\t\t\t\t\t<Link style={{ fontWeight: 'bold' }} key={1}>\n\t\t\t\t\t\t\t{faker.name.firstName()}\n\t\t\t\t\t\t</Link>,\n\t\t\t\t\t\t<Text key={2}> uploaded </Text>,\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\tonClick={() => inspectFile('file guid')}\n\t\t\t\t\t\t\tstyle={{ fontWeight: 'bold' }}\n\t\t\t\t\t\t\tkey={3}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{faker.system.fileName()}\n\t\t\t\t\t\t</Link>,\n\t\t\t\t\t],\n\t\t\t\t\tactivityIcon: (\n\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\t{...getFileTypeIconProps({\n\t\t\t\t\t\t\t\textension: 'docx',\n\t\t\t\t\t\t\t\tsize: 32,\n\t\t\t\t\t\t\t\timageFileType: 'png',\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t/>\n\t\t\t\t\t),\n\t\t\t\t\ttimeStamp: 'yesterday',\n\t\t\t\t})\n\t\t);\n\t};\n\tconst [activity, setActivity] = useState(moreFakeRecent());\n\n\tconst fetchData = () => {\n\t\tsetTimeout(() => setActivity(activity.concat(moreFakeRecent())), 2000);\n\t};\n\n\t// // File Panel\n\t// const [isOpen, { setTrue: openPanel, setFalse: dismissPanel }] = useBoolean(\n\t// \tfalse\n\t// );\n\t// const [file]\n\t// const inspectFile = (id: string) => {\n\t// \topenPanel();\n\t// };\n\n\treturn (\n\t\t<div>\n\t\t\t<MenuBar type='Recent' />\n\n\t\t\t<InfiniteScroll\n\t\t\t\tdataLength={activity.length} //This is important field to render the next data\n\t\t\t\tnext={fetchData}\n\t\t\t\thasMore={true}\n\t\t\t\tloader={<Spinner size={SpinnerSize.large} />}\n\t\t\t\tendMessage={\n\t\t\t\t\t<p style={{ textAlign: 'center' }}>\n\t\t\t\t\t\t<b>Yay! You have seen it all</b>\n\t\t\t\t\t</p>\n\t\t\t\t}\n\t\t\t\tstyle={{\n\t\t\t\t\toverflow: 'visible',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{activity.map((i) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<ActivityItem\n\t\t\t\t\t\t\t{...i}\n\t\t\t\t\t\t\tkey={i.key}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tmarginTop: 20,\n\t\t\t\t\t\t\t\tmarginLeft: 40,\n\t\t\t\t\t\t\t\tmarginRight: 40,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</InfiniteScroll>\n\t\t\t<BackToTop showAt={100} speed={1500} easing='easeOutSine'>\n\t\t\t\t<IconButton\n\t\t\t\t\ticonProps={{ iconName: 'ChevronUp' }}\n\t\t\t\t\ttitle='BacktoTop'\n\t\t\t\t\tariaLabel='BacktoTop'\n\t\t\t\t/>\n\t\t\t</BackToTop>\n\t\t\t{/* <FilePanel isOpen={isOpen} dismiss={dismissPanel} /> */}\n\t\t</div>\n\t);\n};\n\nexport default RecentFiles;\n","/Users/Marcus/Projects/Audex/Audex.Desktop/src/Pages/HomePage.tsx",["42"],"/Users/Marcus/Projects/Audex/Audex.Desktop/src/Components/Header/LoggedInUser.tsx",["43"],"import {\n\tmergeStyleSets,\n\tPersona,\n\tPersonaSize,\n\tPersonaPresence,\n\tContextualMenu,\n\tgetTheme,\n\tIPersonaSharedProps,\n\tIContextualMenuItem,\n} from '@fluentui/react';\nimport React from 'react';\n\nconst accountMenuItems: IContextualMenuItem[] = [\n\t{\n\t\tkey: 'account',\n\t\ttext: 'Account',\n\t\tonClick: () => console.log('Account'),\n\t},\n\t// {\n\t// \tkey: 'divider_1',\n\t// \titemType: ContextualMenuItemType.Divider,\n\t// },\n\t{\n\t\tkey: 'logout',\n\t\ttext: 'Log Out',\n\t\tonClick: () => console.log('Log Out'),\n\t},\n];\n\nconst LoggedInUser = () => {\n\tconst { palette } = getTheme();\n\n\t// Persona Settings\n\tconst examplePersona: IPersonaSharedProps = {\n\t\t// imageUrl: TestImages.personaFemale,\n\t\timageInitials: 'MO',\n\t\ttext: 'Marcus Orciuch',\n\t\tsecondaryText: 'Administrator',\n\t\ttertiaryText: 'On Audex desktop client (MacOS)',\n\t\tshowSecondaryText: true,\n\t};\n\n\t// Account Context Menu\n\tconst linkRef = React.useRef(null);\n\tconst [showContextualMenu, setShowContextualMenu] = React.useState(false);\n\tconst onShowContextualMenu = React.useCallback(\n\t\t(ev: React.MouseEvent<HTMLElement>) => {\n\t\t\tev.preventDefault(); // don't navigate\n\t\t\tsetShowContextualMenu(true);\n\t\t},\n\t\t[]\n\t);\n\tconst onHideContextualMenu = React.useCallback(\n\t\t() => setShowContextualMenu(false),\n\t\t[]\n\t);\n\n\treturn (\n\t\t<div\n\t\t\tclassName={\n\t\t\t\tmergeStyleSets({\n\t\t\t\t\tpersona: {\n\t\t\t\t\t\tselectors: {\n\t\t\t\t\t\t\t'&:hover': {\n\t\t\t\t\t\t\t\tbackground: palette.neutralLight,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcursor: 'pointer',\n\t\t\t\t\t\tpadding: 5,\n\t\t\t\t\t},\n\t\t\t\t}).persona\n\t\t\t}\n\t\t\t// style={{\n\t\t\t// \tcursor: 'pointer',\n\t\t\t// }}\n\t\t>\n\t\t\t<Persona\n\t\t\t\t{...examplePersona}\n\t\t\t\tsize={PersonaSize.size32}\n\t\t\t\tpresence={PersonaPresence.online}\n\t\t\t\tref={linkRef}\n\t\t\t\tonClick={onShowContextualMenu}\n\t\t\t/>\n\t\t\t<ContextualMenu\n\t\t\t\titems={accountMenuItems}\n\t\t\t\thidden={!showContextualMenu}\n\t\t\t\ttarget={linkRef}\n\t\t\t\tonItemClick={onHideContextualMenu}\n\t\t\t\tonDismiss={onHideContextualMenu}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default LoggedInUser;\n","/Users/Marcus/Projects/Audex/Audex.Desktop/src/Components/Header/HeaderBar.tsx",["44"],{"ruleId":"45","severity":1,"message":"46","line":13,"column":13,"nodeType":"47","messageId":"48","endLine":13,"endColumn":18},{"ruleId":"45","severity":1,"message":"46","line":104,"column":17,"nodeType":"47","messageId":"48","endLine":104,"endColumn":34},{"ruleId":"49","severity":1,"message":"50","line":6,"column":2,"nodeType":"51","messageId":"52","endLine":6,"endColumn":6},{"ruleId":"49","severity":1,"message":"53","line":7,"column":2,"nodeType":"51","messageId":"52","endLine":7,"endColumn":16},{"ruleId":"49","severity":1,"message":"54","line":12,"column":10,"nodeType":"51","messageId":"52","endLine":12,"endColumn":20},{"ruleId":"49","severity":1,"message":"55","line":14,"column":32,"nodeType":"51","messageId":"52","endLine":14,"endColumn":44},{"ruleId":"49","severity":1,"message":"56","line":19,"column":8,"nodeType":"51","messageId":"52","endLine":19,"endColumn":17},{"ruleId":"45","severity":1,"message":"46","line":21,"column":21,"nodeType":"47","messageId":"48","endLine":21,"endColumn":26},{"ruleId":"49","severity":1,"message":"57","line":25,"column":6,"nodeType":"51","messageId":"52","endLine":25,"endColumn":7},{"ruleId":"45","severity":1,"message":"46","line":11,"column":18,"nodeType":"47","messageId":"48","endLine":11,"endColumn":23},{"ruleId":"45","severity":1,"message":"46","line":30,"column":22,"nodeType":"47","messageId":"48","endLine":30,"endColumn":27},{"ruleId":"45","severity":1,"message":"46","line":15,"column":19,"nodeType":"47","messageId":"48","endLine":15,"endColumn":24},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","@typescript-eslint/no-unused-vars","'List' is defined but never used.","Identifier","unusedVar","'ScrollablePane' is defined but never used.","'useBoolean' is defined but never used.","'FileIconType' is defined but never used.","'FilePanel' is defined but never used.","'e' is assigned a value but never used."]